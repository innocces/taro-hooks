"use strict";(self.webpackChunk_taro_hooks_website=self.webpackChunk_taro_hooks_website||[]).push([[1990],{7773:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>k,contentTitle:()=>c,default:()=>f,frontMatter:()=>p,metadata:()=>d,toc:()=>g});t(79);var a=t(8570),r=t(5745),o=t(1245),s=t(6417),i=t(9497);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function m(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const p={title:"\u57fa\u7840\u4f7f\u7528",sidebar_position:2},c=void 0,d={unversionedId:"useRequest/basic",id:"useRequest/basic",title:"\u57fa\u7840\u4f7f\u7528",description:"\u8fd9\u4e00\u5c0f\u8282\u6211\u4eec\u4f1a\u4ecb\u7ecd useRequest \u6700\u6838\u5fc3\uff0c\u6700\u57fa\u7840\u7684\u80fd\u529b\uff0c\u4e5f\u5c31\u662f useRequest \u5185\u6838\u7684\u80fd\u529b\u3002",source:"@site/../packages/hooks/src/useRequest/basic.mdx",sourceDirName:"useRequest",slug:"/useRequest/basic",permalink:"/taro-hooks/hooks/useRequest/basic",draft:!1,editUrl:"https://github.com/innocces/taro-hooks/edit/next/src/../packages/hooks/src/useRequest/basic.mdx",tags:[],version:"current",lastUpdatedBy:"innocces",lastUpdatedAt:1705200916,formattedLastUpdatedAt:"2024\u5e741\u670814\u65e5",sidebarPosition:2,frontMatter:{title:"\u57fa\u7840\u4f7f\u7528",sidebar_position:2},sidebar:"hooks",previous:{title:"\u5feb\u901f\u4e0a\u624b",permalink:"/taro-hooks/hooks/useRequest/"},next:{title:"Loading Delay",permalink:"/taro-hooks/hooks/useRequest/loadingDelay"}},k={},g=[{value:"\u9ed8\u8ba4\u8bf7\u6c42",id:"\u9ed8\u8ba4\u8bf7\u6c42",level:2},{value:"\u624b\u52a8\u89e6\u53d1",id:"\u624b\u52a8\u89e6\u53d1",level:2},{value:"\u751f\u547d\u5468\u671f",id:"\u751f\u547d\u5468\u671f",level:2},{value:"\u5237\u65b0\uff08\u91cd\u590d\u4e0a\u4e00\u6b21\u8bf7\u6c42\uff09",id:"\u5237\u65b0\u91cd\u590d\u4e0a\u4e00\u6b21\u8bf7\u6c42",level:2},{value:"\u7acb\u5373\u53d8\u66f4\u6570\u636e",id:"\u7acb\u5373\u53d8\u66f4\u6570\u636e",level:2},{value:"\u53d6\u6d88\u8bf7\u6c42",id:"\u53d6\u6d88\u8bf7\u6c42",level:2},{value:"\u53c2\u6570\u7ba1\u7406",id:"\u53c2\u6570\u7ba1\u7406",level:2},{value:"API",id:"api",level:2},{value:"Result",id:"result",level:3},{value:"Options",id:"options",level:3}],h={toc:g},b="wrapper";function f(e){var{components:n}=e,t=m(e,["components"]);return(0,a.kt)(b,u(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){l(e,n,t[n])}))}return e}({},h,t),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u8fd9\u4e00\u5c0f\u8282\u6211\u4eec\u4f1a\u4ecb\u7ecd ",(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u6700\u6838\u5fc3\uff0c\u6700\u57fa\u7840\u7684\u80fd\u529b\uff0c\u4e5f\u5c31\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u5185\u6838\u7684\u80fd\u529b\u3002"),(0,a.kt)("h2",{id:"\u9ed8\u8ba4\u8bf7\u6c42"},"\u9ed8\u8ba4\u8bf7\u6c42"),(0,a.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\uff0c\u5728\u7ec4\u4ef6\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u81ea\u52a8\u6267\u884c\u8be5\u5f02\u6b65\u51fd\u6570\u3002\u540c\u65f6\u81ea\u52a8\u7ba1\u7406\u8be5\u5f02\u6b65\u51fd\u6570\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"loading")," , ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," , ",(0,a.kt)("inlineCode",{parentName:"p"},"error")," \u7b49\u72b6\u6001\u3002"),(0,a.kt)(r.Z,{groupId:"codeDisplayGroup",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"React",label:"React",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"showLineNumbers",showLineNumbers:!0},"const { data, error, loading } = useRequest(getUsername);\n"))),(0,a.kt)(o.Z,{value:"Vue",label:"Vue",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:"showLineNumbers",showLineNumbers:!0},"<template>\n  <block>\n    <view>{{request.loading}}</view>\n    <view>{{request.data}}</view>\n    <view>{{request.error}}</view>\n  </block>\n</template>\n<script>\n  export default {\n    setup() {\n      // \u7531\u4e8e\u8981\u4fdd\u8bc1request\u5185\u90e8\u7684\u53d8\u91cf\u4e0d\u5931\u6d3b\u3002 \u8fd9\u91cc\u7b80\u5355\u7684\u53ef\u4ee5\u5c06request\u76f4\u63a5\u629b\u51fa\n      const request = useRequest(getUsername);\n\n      return {\n        request,\n      };\n    },\n  };\n<\/script>\n")))),(0,a.kt)(i.ZP,{VueTab:(0,a.kt)(s.Z,{language:"html",title:"network/useRequest/basic/index",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/basic/index.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/basic/index",mdxType:"CodeDisplay"},"<template>\n  <block>\n    <demo-content title=\"Basic - \u9ed8\u8ba4\u7528\u6cd5\" desc=\"\u8bfb\u53d6\u7528\u6237\u540d\u79f0\">\n      <view v-if=\"request.loading\"> loading... </view>\n      <template v-else>\n        <view v-if=\"request.error\"> error: {{ request.error.message }} </view>\n        <view v-else> Username: {{ request.data }} </view>\n      </template>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useRequest } from 'taro-hooks';\n\nimport Mock from 'mockjs';\n\nfunction getUsername() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve(Mock.mock('@name()'));\n      } else {\n        reject(new Error('Failed to get username'));\n      }\n    }, 1000);\n  });\n}\nexport default {\n  setup() {\n    const request = useRequest(getUsername);\n\n    return { request };\n  },\n};\n<\/script>\n"),ReactTab:(0,a.kt)(s.Z,{language:"tsx",title:"network/useRequest/basic/index",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/basic/index.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/basic/index",mdxType:"CodeDisplay"},"import React from 'react';\nimport { View } from '@tarojs/components';\nimport DemoContent from '@src/components/DemoContent';\n\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nfunction getUsername(): Promise<string> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve(Mock.mock('@name()'));\n      } else {\n        reject(new Error('Failed to get username'));\n      }\n    }, 1000);\n  });\n}\n\nexport default () => {\n  const { data, error, loading } = useRequest(getUsername);\n\n  return (\n    <DemoContent title=\"Basic - \u9ed8\u8ba4\u7528\u6cd5\" desc=\"\u8bfb\u53d6\u7528\u6237\u540d\u79f0\">\n      {error ? (\n        <View>{error.message}</View>\n      ) : loading ? (\n        <View>loading...</View>\n      ) : (\n        <View>Username: {data}</View>\n      )}\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h2",{id:"\u624b\u52a8\u89e6\u53d1"},"\u624b\u52a8\u89e6\u53d1"),(0,a.kt)("p",null,"\u5982\u679c\u8bbe\u7f6e\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"options.manual = true"),"\uff0c\u5219 ",(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u4e0d\u4f1a\u9ed8\u8ba4\u6267\u884c\uff0c\u9700\u8981\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"run")," \u6216\u8005 ",(0,a.kt)("inlineCode",{parentName:"p"},"runAsync")," \u6765\u89e6\u53d1\u6267\u884c\u3002"),(0,a.kt)(r.Z,{groupId:"codeDisplayGroup",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"React",label:"React",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"showLineNumbers",showLineNumbers:!0},"const { loading, run, runAsync } = useRequest(service, {\n  manual: true,\n});\n\n<button onClick={run} disabled={loading}>\n  {loading ? 'Loading' : 'Edit'}\n</button>;\n"))),(0,a.kt)(o.Z,{value:"Vue",label:"Vue",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:"showLineNumbers",showLineNumbers:!0},"<template>\n  <block>\n    <button @click=\"request.run()\">\n      {{request.loading ? 'Loading' : 'Edit'}}\n    </button>\n  </block>\n</template>\n<script>\n  export default {\n    setup() {\n      // \u7531\u4e8e\u8981\u4fdd\u8bc1request\u5185\u90e8\u7684\u53d8\u91cf\u4e0d\u5931\u6d3b\u3002 \u8fd9\u91cc\u7b80\u5355\u7684\u53ef\u4ee5\u5c06request\u76f4\u63a5\u629b\u51fa\n      const request = useRequest(service, {\n        manual: true,\n      });\n\n      return {\n        request,\n      };\n    },\n  };\n<\/script>\n")))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"run")," \u4e0e ",(0,a.kt)("inlineCode",{parentName:"p"},"runAsync")," \u7684\u533a\u522b\u5728\u4e8e\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"run")," \u662f\u4e00\u4e2a\u666e\u901a\u7684\u540c\u6b65\u51fd\u6570\uff0c\u6211\u4eec\u4f1a\u81ea\u52a8\u6355\u83b7\u5f02\u5e38\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"options.onError")," \u6765\u5904\u7406\u5f02\u5e38\u65f6\u7684\u884c\u4e3a\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"runAsync")," \u662f\u4e00\u4e2a\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise")," \u7684\u5f02\u6b65\u51fd\u6570\uff0c\u5982\u679c\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"runAsync")," \u6765\u8c03\u7528\uff0c\u5219\u610f\u5473\u7740\u4f60\u9700\u8981\u81ea\u5df1\u6355\u83b7\u5f02\u5e38\u3002"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"runAsync()\n  .then((data) => {\n    console.log(data);\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n")))),(0,a.kt)("p",null,"\u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7\u4fee\u6539\u7528\u6237\u540d\u8fd9\u4e2a\u7b80\u5355\u7684\u573a\u666f\uff0c\u6765\u6f14\u793a useRequest \u624b\u52a8\u89e6\u53d1\u6a21\u5f0f\uff0c\u4ee5\u53ca ",(0,a.kt)("inlineCode",{parentName:"p"},"run")," \u4e0e ",(0,a.kt)("inlineCode",{parentName:"p"},"runAsync")," \u7684\u533a\u522b\u3002"),(0,a.kt)(i.ZP,{VueTab:(0,a.kt)(s.Z,{language:"html",title:"network/useRequest/basic/manualRun",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/basic/manualRun.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/basic/manualRun",mdxType:"CodeDisplay"},"<template>\n  <block>\n    <demo-content\n      title=\"Basic - \u624b\u52a8\u89e6\u53d1\"\n      desc=\"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7 run(username) \u6765\u4fee\u6539\u7528\u6237\u540d\uff0c\u901a\u8fc7 onSuccess \u548c onError \u6765\u5904\u7406\u6210\u529f\u548c\u5931\u8d25\"\n    >\n      <nut-input\n        :disabled=\"request.loading\"\n        v-model=\"state\"\n        placeholder=\"Please enter username\"\n      >\n        <template #button>\n          <nut-button\n            :loading=\"request.loading\"\n            size=\"small\"\n            type=\"primary\"\n            shape=\"square\"\n            @click=\"request.run(state)\"\n            >{{ request.loading ? 'Loading' : 'Edit' }}</nut-button\n          >\n        </template>\n      </nut-input>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { showToast } from '@tarojs/taro';\nimport { useState } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\n\nfunction editUsername() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve();\n      } else {\n        reject(new Error('Failed to modify username'));\n      }\n    }, 1000);\n  });\n}\nexport default {\n  setup() {\n    const [state, setState] = useState('');\n    const request = useRequest(editUsername, {\n      manual: true,\n      onSuccess: (result, params) => {\n        setState('');\n        showToast({\n          title: 'The username was changed to \"${params[0]}\" !',\n          icon: 'success',\n        });\n      },\n      onError: (error) => {\n        showToast({ title: error.message, icon: 'error' });\n      },\n    });\n\n    return {\n      request,\n      state,\n    };\n  },\n};\n<\/script>\n"),ReactTab:(0,a.kt)(s.Z,{language:"tsx",title:"network/useRequest/basic/manualRun",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/basic/manualRun.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/basic/manualRun",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Input, Field } from '@taroify/core';\n\nimport { showToast } from '@tarojs/taro';\nimport { useState } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\n\nfunction editUsername(username: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve();\n      } else {\n        reject(new Error('Failed to modify username'));\n      }\n    }, 1000);\n  });\n}\n\nexport default () => {\n  const [state, setState] = useState('');\n\n  const { loading, run } = useRequest(editUsername, {\n    manual: true,\n    onSuccess: (result, params) => {\n      setState('');\n      showToast({\n        title: 'The username was changed to \"${params[0]}\" !',\n        icon: 'success',\n      });\n    },\n    onError: (error) => {\n      showToast({ title: error.message, icon: 'error' });\n    },\n  });\n\n  return (\n    <DemoContent\n      title=\"Basic - \u624b\u52a8\u89e6\u53d1\"\n      desc=\"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7 run(username) \u6765\u4fee\u6539\u7528\u6237\u540d\uff0c\u901a\u8fc7 onSuccess \u548c onError \u6765\u5904\u7406\u6210\u529f\u548c\u5931\u8d25\"\n    >\n      <Field align=\"center\">\n        <Input\n          onChange={(e) => setState(e.detail.value)}\n          value={state}\n          placeholder=\"Please enter username\"\n        />\n        <Button\n          disabled={loading}\n          loading={loading}\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => run(state)}\n        >\n          {loading ? 'Loading' : 'Edit'}\n        </Button>\n      </Field>\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)(i.ZP,{VueTab:(0,a.kt)(s.Z,{language:"html",title:"network/useRequest/basic/manualRunAsync",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/basic/manualRunAsync.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/basic/manualRunAsync",mdxType:"CodeDisplay"},"<template>\n  <block>\n    <demo-content\n      title=\"Basic - \u624b\u52a8\u89e6\u53d1\"\n      desc=\"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7 runAsync(username) \u6765\u4fee\u6539\u7528\u6237\u540d\uff0c\u6b64\u65f6\u5fc5\u987b\u901a\u8fc7 catch \u6765\u81ea\u884c\u5904\u7406\u5f02\u5e38\u3002\"\n    >\n      <nut-input\n        :disabled=\"request.loading\"\n        v-model=\"state\"\n        placeholder=\"Please enter username\"\n      >\n        <template #button>\n          <nut-button\n            :loading=\"request.loading\"\n            size=\"small\"\n            type=\"primary\"\n            shape=\"square\"\n            @click=\"handleRunAsync()\"\n            >{{ request.loading ? 'Loading' : 'Edit' }}</nut-button\n          >\n        </template>\n      </nut-input>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { showToast } from '@tarojs/taro';\nimport { useState } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\nimport { escapeState } from '@taro-hooks/shared';\n\nfunction editUsername() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve();\n      } else {\n        reject(new Error('Failed to modify username'));\n      }\n    }, 1000);\n  });\n}\nexport default {\n  setup() {\n    const [state, setState] = useState('');\n    const request = useRequest(editUsername, {\n      manual: true,\n    });\n\n    const handleRunAsync = async () => {\n      const { runAsync } = escapeState(request);\n      const username = escapeState(state);\n      try {\n        await runAsync(username);\n        setState('');\n        showToast({\n          title: 'The username was changed to \"${username}\" !',\n          icon: 'success',\n        });\n      } catch (error) {\n        showToast({ title: error.message, icon: 'error' });\n      }\n    };\n\n    return {\n      request,\n      state,\n      handleRunAsync,\n    };\n  },\n};\n<\/script>\n"),ReactTab:(0,a.kt)(s.Z,{language:"tsx",title:"network/useRequest/basic/manualRunAsync",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/basic/manualRunAsync.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/basic/manualRunAsync",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Input, Field } from '@taroify/core';\n\nimport { showToast } from '@tarojs/taro';\nimport { useState } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\n\nfunction editUsername(username: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve();\n      } else {\n        reject(new Error('Failed to modify username'));\n      }\n    }, 1000);\n  });\n}\n\nexport default () => {\n  const [state, setState] = useState('');\n\n  const { loading, runAsync } = useRequest(editUsername, {\n    manual: true,\n  });\n\n  const onClick = async () => {\n    try {\n      await runAsync(state);\n      setState('');\n      showToast({\n        title: 'The username was changed to \"${state}\" !',\n        icon: 'success',\n      });\n    } catch (error) {\n      showToast({ title: error.message, icon: 'error' });\n    }\n  };\n\n  return (\n    <DemoContent\n      title=\"Basic - \u624b\u52a8\u89e6\u53d1\"\n      desc=\"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7 runAsync(username) \u6765\u4fee\u6539\u7528\u6237\u540d\uff0c\u6b64\u65f6\u5fc5\u987b\u901a\u8fc7 catch \u6765\u81ea\u884c\u5904\u7406\u5f02\u5e38\u3002\"\n    >\n      <Field align=\"center\">\n        <Input\n          onChange={(e) => setState(e.detail.value)}\n          value={state}\n          placeholder=\"Please enter username\"\n        />\n        <Button\n          disabled={loading}\n          loading={loading}\n          color=\"primary\"\n          size=\"small\"\n          onClick={onClick}\n        >\n          {loading ? 'Loading' : 'Edit'}\n        </Button>\n      </Field>\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h2",{id:"\u751f\u547d\u5468\u671f"},"\u751f\u547d\u5468\u671f"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u751f\u547d\u5468\u671f\u914d\u7f6e\u9879\uff0c\u4f9b\u4f60\u5728\u5f02\u6b65\u51fd\u6570\u7684\u4e0d\u540c\u9636\u6bb5\u505a\u4e00\u4e9b\u5904\u7406\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onBefore"),"\uff1a\u8bf7\u6c42\u4e4b\u524d\u89e6\u53d1"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onSuccess"),"\uff1a\u8bf7\u6c42\u6210\u529f\u89e6\u53d1"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onError"),"\uff1a\u8bf7\u6c42\u5931\u8d25\u89e6\u53d1"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"onFinally"),"\uff1a\u8bf7\u6c42\u5b8c\u6210\u89e6\u53d1")),(0,a.kt)(i.ZP,{VueTab:(0,a.kt)(s.Z,{language:"html",title:"network/useRequest/basic/lifeCycle",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/basic/lifeCycle.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/basic/lifeCycle",mdxType:"CodeDisplay"},"<template>\n  <block>\n    <demo-content title=\"Basic - \u751f\u547d\u5468\u671f\">\n      <nut-input\n        :disabled=\"request.loading\"\n        v-model=\"state\"\n        placeholder=\"Please enter username\"\n      >\n        <template #button>\n          <nut-button\n            :loading=\"request.loading\"\n            size=\"small\"\n            type=\"primary\"\n            shape=\"square\"\n            @click=\"request.run(state)\"\n            >{{ request.loading ? 'Loading' : 'Edit' }}</nut-button\n          >\n        </template>\n      </nut-input>\n      <nut-progress\n        :percentage=\"progress\"\n        :text-inside=\"!status?.length\"\n        :status=\"status?.length ? 'icon' : 'text'\"\n        :icon-name=\"status\"\n        icon-color=\"#a773ed\"\n      ></nut-progress>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { showToast } from '@tarojs/taro';\nimport { useState } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\n\nfunction editUsername(username) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve();\n      } else {\n        reject(new Error('Failed to modify username'));\n      }\n    }, 1000);\n  });\n}\n\nexport default {\n  setup() {\n    const [state, setState] = useState('');\n    const [progress, setProgress] = useState(0);\n    const [status, setStatus] = useState();\n    const request = useRequest(editUsername, {\n      manual: true,\n      onBefore: (params) => {\n        setProgress(0);\n        setStatus();\n        showToast({\n          icon: 'none',\n          title: 'Start Request: ${params[0]}',\n        });\n      },\n      onSuccess: (result, params) => {\n        setState('');\n        setStatus('heart-fill');\n        showToast({\n          icon: 'success',\n          title: 'The username was changed to \"${params[0]}\" !',\n        });\n      },\n      onError: (error) => {\n        setStatus('del2');\n        showToast({\n          icon: 'error',\n          title: error.message,\n        });\n      },\n      onFinally: (params, result, error) => {\n        setProgress(100);\n      },\n    });\n\n    return { request, state, progress, status };\n  },\n};\n<\/script>\n"),ReactTab:(0,a.kt)(s.Z,{language:"tsx",title:"network/useRequest/basic/lifeCycle",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/basic/lifeCycle.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/basic/lifeCycle",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Input, Field, Progress } from '@taroify/core';\n\nimport { showToast } from '@tarojs/taro';\nimport { useState } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\n\nfunction editUsername(username: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve();\n      } else {\n        reject(new Error('Failed to modify username'));\n      }\n    }, 1000);\n  });\n}\n\nexport default () => {\n  const [state, setState] = useState<string>('');\n  const [progress, setProgress] = useState<number>(0);\n  const [status, setStatus] = useState<string | undefined>();\n\n  // edit username\n  const { loading, run } = useRequest(editUsername, {\n    manual: true,\n    onBefore: (params) => {\n      setProgress(0);\n      // @ts-ignore\n      setStatus();\n      showToast({\n        icon: 'none',\n        title: 'Start Request: ${params[0]}',\n      });\n    },\n    onSuccess: (result, params) => {\n      setState('');\n      setStatus('heart-fill');\n      showToast({\n        icon: 'success',\n        title: 'The username was changed to \"${params[0]}\" !',\n      });\n    },\n    onError: (error) => {\n      setStatus('del2');\n      showToast({\n        icon: 'error',\n        title: error.message,\n      });\n    },\n    onFinally: (params, result, error) => {\n      setProgress(100);\n    },\n  });\n\n  return (\n    <DemoContent title=\"Basic - \u751f\u547d\u5468\u671f\">\n      <Field align=\"center\">\n        <Input\n          onChange={(e) => setState(e.detail.value)}\n          value={state}\n          placeholder=\"Please enter username\"\n        />\n        <Button\n          disabled={loading}\n          loading={loading}\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => run(state)}\n        >\n          {loading ? 'Loading' : 'Edit'}\n        </Button>\n      </Field>\n      <Progress percent={progress} />\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h2",{id:"\u5237\u65b0\u91cd\u590d\u4e0a\u4e00\u6b21\u8bf7\u6c42"},"\u5237\u65b0\uff08\u91cd\u590d\u4e0a\u4e00\u6b21\u8bf7\u6c42\uff09"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u63d0\u4f9b\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"refresh")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshAsync")," \u65b9\u6cd5\uff0c\u4f7f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e00\u6b21\u7684\u53c2\u6570\uff0c\u91cd\u65b0\u53d1\u8d77\u8bf7\u6c42\u3002"),(0,a.kt)("p",null,"\u5047\u5982\u5728\u8bfb\u53d6\u7528\u6237\u4fe1\u606f\u7684\u573a\u666f\u4e2d"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6211\u4eec\u8bfb\u53d6\u4e86 ID \u4e3a 1 \u7684\u7528\u6237\u4fe1\u606f ",(0,a.kt)("inlineCode",{parentName:"li"},"run(1)")),(0,a.kt)("li",{parentName:"ol"},"\u6211\u4eec\u901a\u8fc7\u67d0\u79cd\u624b\u6bb5\u66f4\u65b0\u4e86\u7528\u6237\u4fe1\u606f"),(0,a.kt)("li",{parentName:"ol"},"\u6211\u4eec\u60f3\u91cd\u65b0\u53d1\u8d77\u4e0a\u4e00\u6b21\u7684\u8bf7\u6c42\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"li"},"refresh")," \u6765\u4ee3\u66ff ",(0,a.kt)("inlineCode",{parentName:"li"},"run(1)"),"\uff0c\u8fd9\u5728\u590d\u6742\u53c2\u6570\u7684\u573a\u666f\u4e2d\u662f\u975e\u5e38\u6709\u7528\u7684")),(0,a.kt)(i.ZP,{VueTab:(0,a.kt)(s.Z,{language:"html",title:"network/useRequest/basic/refresh",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/basic/refresh.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/basic/refresh",mdxType:"CodeDisplay"},'<template>\n  <block>\n    <demo-content title="Basic - \u5237\u65b0\uff08\u91cd\u590d\u4e0a\u4e00\u6b21\u8bf7\u6c42\uff09" desc="\u5237\u65b0\u7528\u6237\u540d\u79f0">\n      <view v-if="request.loading"> loading... </view>\n      <template v-else>\n        <view v-if="request.error"> error: {{ request.error.message }} </view>\n        <view v-else> Username: {{ request.data }} </view>\n      </template>\n      <nut-button\n        :loading="request.loading"\n        size="small"\n        type="primary"\n        shape="square"\n        @click="request.refresh()"\n        >{{ request.loading ? \'Loading\' : \'Refresh\' }}</nut-button\n      >\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useEffect } from \'@taro-hooks/core\';\nimport { useRequest } from \'taro-hooks\';\nimport { escapeState } from \'@taro-hooks/shared\';\n\nimport Mock from \'mockjs\';\n\nfunction getUsername(id) {\n  console.log(\'use-request-refresh-id\', id);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(Mock.mock(\'@name()\'));\n    }, 1000);\n  });\n}\nexport default {\n  setup() {\n    const request = useRequest((id) => getUsername(id), {\n      manual: true,\n    });\n\n    useEffect(() => {\n      escapeState(request).run(1);\n    }, []);\n\n    return { request };\n  },\n};\n<\/script>\n'),ReactTab:(0,a.kt)(s.Z,{language:"tsx",title:"network/useRequest/basic/refresh",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/basic/refresh.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/basic/refresh",mdxType:"CodeDisplay"},"import React from 'react';\nimport { View } from '@tarojs/components';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button } from '@taroify/core';\n\nimport { useEffect } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nfunction getUsername(id: number): Promise<string> {\n  console.log('use-request-refresh-id', id);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock('@name()'));\n    }, 1000);\n  });\n}\n\nexport default () => {\n  const { data, loading, run, refresh } = useRequest(\n    (id: number) => getUsername(id),\n    {\n      manual: true,\n    },\n  );\n\n  useEffect(() => {\n    run(1);\n  }, []);\n\n  return (\n    <DemoContent title=\"Basic - \u5237\u65b0\uff08\u91cd\u590d\u4e0a\u4e00\u6b21\u8bf7\u6c42\uff09\" desc=\"\u5237\u65b0\u7528\u6237\u540d\u79f0\">\n      {loading ? (\n        <View>Loading...</View>\n      ) : (\n        <>\n          <View>Username: {data}</View>\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"primary\"\n            size=\"small\"\n            onClick={refresh}\n          >\n            {loading ? 'Loading' : 'Refresh'}\n          </Button>\n        </>\n      )}\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("p",null,"\u5f53\u7136 ",(0,a.kt)("inlineCode",{parentName:"p"},"refresh")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshAsync")," \u7684\u533a\u522b\u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"run")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"runAsync")," \u662f\u4e00\u81f4\u7684\u3002"),(0,a.kt)("h2",{id:"\u7acb\u5373\u53d8\u66f4\u6570\u636e"},"\u7acb\u5373\u53d8\u66f4\u6570\u636e"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u63d0\u4f9b\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"mutate"),", \u652f\u6301\u7acb\u5373\u4fee\u6539 ",(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u8fd4\u56de\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," \u53c2\u6570\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"mutate")," \u7684\u7528\u6cd5\u4e0e ",(0,a.kt)("inlineCode",{parentName:"p"},"React.setState")," \u4e00\u81f4\uff0c\u652f\u6301 ",(0,a.kt)("inlineCode",{parentName:"p"},"mutate(newData)")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"mutate((oldData) => newData)")," \u4e24\u79cd\u5199\u6cd5\u3002"),(0,a.kt)("p",null,"\u4e0b\u9762\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u6f14\u793a\u4e86\u4e00\u79cd ",(0,a.kt)("inlineCode",{parentName:"p"},"mutate")," \u7684\u5e94\u7528\u573a\u666f\u3002"),(0,a.kt)("p",null,"\u6211\u4eec\u4fee\u6539\u4e86\u7528\u6237\u540d\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u7b49\u7f16\u8f91\u63a5\u53e3\u8c03\u7528\u6210\u529f\u4e4b\u540e\uff0c\u624d\u7ed9\u7528\u6237\u53cd\u9988\u3002\u800c\u662f\u76f4\u63a5\u4fee\u6539\u9875\u9762\u6570\u636e\uff0c\u540c\u65f6\u5728\u80cc\u540e\u53bb\u8c03\u7528\u4fee\u6539\u63a5\u53e3\uff0c\u7b49\u4fee\u6539\u63a5\u53e3\u8fd4\u56de\u4e4b\u540e\uff0c\u53e6\u5916\u63d0\u4f9b\u53cd\u9988\u3002"),(0,a.kt)(i.ZP,{VueTab:(0,a.kt)(s.Z,{language:"html",title:"network/useRequest/basic/mutate",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/basic/mutate.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/basic/mutate",mdxType:"CodeDisplay"},"<template>\n  <block>\n    <demo-content title=\"Basic - \u7acb\u5373\u53d8\u66f4\u6570\u636e\" desc=\"\u4fee\u6539\u7528\u6237\u540d\u79f0\">\n      <view>Username: {{ getUserNameRequest.data }}</view>\n      <nut-input\n        :disabled=\"editUserNameRequest.loading\"\n        v-model=\"state\"\n        placeholder=\"Please enter username\"\n      >\n        <template #button>\n          <nut-button\n            :loading=\"editUserNameRequest.loading\"\n            size=\"small\"\n            type=\"primary\"\n            shape=\"square\"\n            @click=\"onChange()\"\n            >{{ editUserNameRequest.loading ? 'Loading' : 'Edit' }}</nut-button\n          >\n        </template>\n      </nut-input>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { showToast } from '@tarojs/taro';\nimport { useRef, useState } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\nimport { escapeState } from '@taro-hooks/shared';\n\nimport Mock from 'mockjs';\n\nfunction getUsername(id) {\n  console.log('use-request-refresh-id', id);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(Mock.mock('@name()'));\n    }, 1000);\n  });\n}\n\nfunction editUsername() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve();\n      } else {\n        reject(new Error('Failed to modify username'));\n      }\n    }, 1000);\n  });\n}\n\nexport default {\n  setup() {\n    // store last username\n    const lastRef = useRef();\n\n    const [state, setState] = useState('');\n\n    // get username\n    const getUserNameRequest = useRequest(getUsername);\n\n    // edit username\n    const editUserNameRequest = useRequest(editUsername, {\n      manual: true,\n      onSuccess: (result, params) => {\n        setState('');\n        showToast({\n          icon: 'success',\n          title: 'The username was changed to \"${params[0]}\" !',\n        });\n      },\n      onError: (error) => {\n        showToast({\n          icon: 'error',\n          title: error.message,\n        });\n        const { mutate } = escapeState(getUserNameRequest);\n        mutate(lastRef.current);\n      },\n    });\n\n    const onChange = () => {\n      const { data, mutate } = escapeState(getUserNameRequest);\n      const { run } = escapeState(editUserNameRequest);\n      const username = escapeState(state);\n      lastRef.current = data;\n      mutate(username);\n      run(username);\n    };\n\n    return { getUserNameRequest, editUserNameRequest, state, onChange };\n  },\n};\n<\/script>\n"),ReactTab:(0,a.kt)(s.Z,{language:"tsx",title:"network/useRequest/basic/mutate",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/basic/mutate.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/basic/mutate",mdxType:"CodeDisplay"},"import React from 'react';\nimport { View } from '@tarojs/components';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Input, Field } from '@taroify/core';\n\nimport { showToast } from '@tarojs/taro';\nimport { useRef, useState } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nfunction getUsername(): Promise<string> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock('@name()'));\n    }, 1000);\n  });\n}\n\nfunction editUsername(username: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve();\n      } else {\n        reject(new Error('Failed to modify username'));\n      }\n    }, 1000);\n  });\n}\n\nexport default () => {\n  // store last username\n  const lastRef = useRef<string>();\n\n  const [state, setState] = useState('');\n\n  // get username\n  const { data: username, mutate } = useRequest(getUsername);\n\n  // edit username\n  const { run: edit, loading } = useRequest(editUsername, {\n    manual: true,\n    onSuccess: (result, params) => {\n      setState('');\n      showToast({\n        title: 'The username was changed to \"${params[0]}\" !',\n        icon: 'success',\n      });\n    },\n    onError: (error) => {\n      showToast({ title: error.message, icon: 'error' });\n      mutate(lastRef.current);\n    },\n  });\n\n  const onChange = () => {\n    lastRef.current = username;\n    mutate(state);\n    edit(state);\n  };\n\n  return (\n    <DemoContent title=\"Basic - \u7acb\u5373\u53d8\u66f4\u6570\u636e\" desc=\"\u4fee\u6539\u7528\u6237\u540d\u79f0\">\n      <View>Username: {username}</View>\n      <Field align=\"center\">\n        <Input\n          onChange={(e) => setState(e.detail.value)}\n          value={state}\n          placeholder=\"Please enter username\"\n        />\n        <Button\n          disabled={loading}\n          loading={loading}\n          color=\"primary\"\n          size=\"small\"\n          onClick={onChange}\n        >\n          {loading ? 'Loading' : 'Edit'}\n        </Button>\n      </Field>\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h2",{id:"\u53d6\u6d88\u8bf7\u6c42"},"\u53d6\u6d88\u8bf7\u6c42"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u63d0\u4f9b\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"cancel")," \u51fd\u6570\uff0c\u53ef\u4ee5\u53d6\u6d88\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u7684\u8bf7\u6c42\u3002\u540c\u65f6 ",(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u4f1a\u5728\u4ee5\u4e0b\u65f6\u673a\u81ea\u52a8\u53d6\u6d88\u5f53\u524d\u8bf7\u6c42\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7ec4\u4ef6\u5378\u8f7d\u65f6\uff0c\u53d6\u6d88\u6b63\u5728\u8fdb\u884c\u7684\u8bf7\u6c42"),(0,a.kt)("li",{parentName:"ul"},"\u7ade\u6001\u53d6\u6d88\uff0c\u5f53\u4e0a\u4e00\u6b21\u8bf7\u6c42\u8fd8\u6ca1\u8fd4\u56de\u65f6\uff0c\u53c8\u53d1\u8d77\u4e86\u4e0b\u4e00\u6b21\u8bf7\u6c42\uff0c\u5219\u4f1a\u53d6\u6d88\u4e0a\u4e00\u6b21\u8bf7\u6c42")),(0,a.kt)(i.ZP,{VueTab:(0,a.kt)(s.Z,{language:"html",title:"network/useRequest/basic/cancel",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/basic/cancel.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/basic/cancel",mdxType:"CodeDisplay"},'<template>\n  <block>\n    <demo-content title="Basic - \u53d6\u6d88\u8bf7\u6c42">\n      <nut-input\n        :disabled="request.loading"\n        v-model="state"\n        placeholder="Please enter username"\n      >\n      </nut-input>\n\n      <nut-row :gutter="10">\n        <nut-col :span="12">\n          <nut-button\n            :loading="request.loading"\n            :block="true"\n            size="small"\n            type="primary"\n            shape="square"\n            @click="request.run(state)"\n          >\n            {{ request.loading ? \'Loading\' : \'Edit\' }}\n          </nut-button>\n        </nut-col>\n        <nut-col :span="12">\n          <nut-button\n            size="small"\n            type="danger"\n            shape="square"\n            block\n            @click="request.cancel()"\n            >Cancel</nut-button\n          >\n        </nut-col>\n      </nut-row>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { showToast } from \'@tarojs/taro\';\nimport { useState } from \'@taro-hooks/core\';\nimport { useRequest } from \'taro-hooks\';\n\nfunction editUsername() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve();\n      } else {\n        reject(new Error(\'Failed to modify username\'));\n      }\n    }, 1000);\n  });\n}\nexport default {\n  setup() {\n    const [state, setState] = useState(\'\');\n    const request = useRequest(editUsername, {\n      manual: true,\n      onSuccess: (result, params) => {\n        setState(\'\');\n        showToast({\n          title: \'The username was changed to "${params[0]}" !\',\n          icon: \'success\',\n        });\n      },\n      onError: (error) => {\n        showToast({ title: error.message, icon: \'error\' });\n      },\n    });\n\n    return {\n      request,\n      state,\n    };\n  },\n};\n<\/script>\n'),ReactTab:(0,a.kt)(s.Z,{language:"tsx",title:"network/useRequest/basic/cancel",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/basic/cancel.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/basic/cancel",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Input, Field, Flex } from '@taroify/core';\n\nimport { showToast } from '@tarojs/taro';\nimport { useState } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\n\nfunction editUsername(username: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        resolve();\n      } else {\n        reject(new Error('Failed to modify username'));\n      }\n    }, 1000);\n  });\n}\n\nexport default () => {\n  const [state, setState] = useState('');\n\n  const { loading, run, cancel } = useRequest(editUsername, {\n    manual: true,\n    onSuccess: (result, params) => {\n      setState('');\n      showToast({\n        title: 'The username was changed to \"${params[0]}\" !',\n        icon: 'success',\n      });\n    },\n    onError: (error) => {\n      showToast({ title: error.message, icon: 'error' });\n    },\n  });\n\n  return (\n    <DemoContent title=\"Basic - \u53d6\u6d88\u8bf7\u6c42\">\n      <Field align=\"center\">\n        <Input\n          onChange={(e) => setState(e.detail.value)}\n          value={state}\n          placeholder=\"Please enter username\"\n        />\n      </Field>\n      <Flex gutter={10}>\n        <Flex.Item span={12}>\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"primary\"\n            size=\"small\"\n            block\n            onClick={() => run(state)}\n          >\n            {loading ? 'Loading' : 'Edit'}\n          </Button>\n        </Flex.Item>\n        <Flex.Item span={12}>\n          <Button block color=\"danger\" size=\"small\" onClick={() => cancel()}>\n            Cancel\n          </Button>\n        </Flex.Item>\n      </Flex>\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h2",{id:"\u53c2\u6570\u7ba1\u7406"},"\u53c2\u6570\u7ba1\u7406"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u8fd4\u56de\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"params")," \u4f1a\u8bb0\u5f55\u5f53\u6b21\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"service")," \u7684\u53c2\u6570\u6570\u7ec4\u3002\u6bd4\u5982\u4f60\u89e6\u53d1\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"run(1, 2, 3)"),"\uff0c\u5219 ",(0,a.kt)("inlineCode",{parentName:"p"},"params")," \u7b49\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"[1, 2, 3]")," \u3002"),(0,a.kt)("p",null,"\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"options.manual = false"),"\uff0c\u5219\u9996\u6b21\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"service")," \u7684\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"options.defaultParams")," \u6765\u8bbe\u7f6e\u3002"),(0,a.kt)(i.ZP,{VueTab:(0,a.kt)(s.Z,{language:"html",title:"network/useRequest/basic/params",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/basic/params.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/basic/params",mdxType:"CodeDisplay"},'<template>\n  <block>\n    <demo-content title="Basic - \u53c2\u6570\u7ba1\u7406">\n      <nut-input\n        :disabled="request.loading"\n        v-model="state"\n        placeholder="Please enter userId"\n      >\n        <template #button>\n          <nut-button\n            :loading="request.loading"\n            size="small"\n            type="primary"\n            shape="square"\n            @click="request.run(state)"\n            >{{ request.loading ? \'Loading\' : \'GetUserName\' }}</nut-button\n          >\n        </template>\n      </nut-input>\n      <view>UserId: {{ request.params[0] }}</view>\n      <view>UserName: {{ request.data }}</view>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useState } from \'@taro-hooks/core\';\nimport { useRequest } from \'taro-hooks\';\nimport Mock from \'mockjs\';\n\nfunction getUsername(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(Mock.mock(\'@name()\'));\n    }, 1000);\n  });\n}\n\nexport default {\n  setup() {\n    const [state] = useState(\'\');\n    const request = useRequest(getUsername, {\n      defaultParams: [\'1\'],\n    });\n\n    return {\n      request,\n      state,\n    };\n  },\n};\n<\/script>\n'),ReactTab:(0,a.kt)(s.Z,{language:"tsx",title:"network/useRequest/basic/params",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/basic/params.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/basic/params",mdxType:"CodeDisplay"},"import React from 'react';\nimport { View } from '@tarojs/components';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Input, Field } from '@taroify/core';\n\nimport { useState } from '@taro-hooks/core';\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nfunction getUsername(): Promise<string> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock('@name()'));\n    }, 1000);\n  });\n}\n\nexport default () => {\n  const [state, setState] = useState('');\n\n  // get username\n  const {\n    data: username,\n    run,\n    params,\n    loading,\n  } = useRequest(getUsername, {\n    defaultParams: ['1'],\n  });\n\n  const onChange = () => {\n    run(state);\n  };\n\n  return (\n    <DemoContent title=\"Basic - \u53c2\u6570\u7ba1\u7406\">\n      <Field align=\"center\">\n        <Input\n          onChange={(e) => setState(e.detail.value)}\n          value={state}\n          placeholder=\"Please enter userId\"\n        />\n        <Button\n          disabled={loading}\n          loading={loading}\n          color=\"primary\"\n          size=\"small\"\n          onClick={onChange}\n        >\n          {loading ? 'Loading' : 'Edit'}\n        </Button>\n      </Field>\n      <View>UserId: {params?.[0]}</View>\n      <View>Username: {username}</View>\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"Vue"),"\u4e2d\u4e0d\u63a8\u8350\u89e3\u6784\u518d\u5bfc\u51fa. \u6216\u8005\u53ef\u4ee5\u81ea\u884c",(0,a.kt)("strong",{parentName:"p"},"toRefs"),". \u4e0d\u7136\u4f1a\u5bfc\u81f4\u5931\u53bb\u54cd\u5e94. (\u56e0\u4e3a",(0,a.kt)("strong",{parentName:"p"},"request"),"\u5728",(0,a.kt)("strong",{parentName:"p"},"Vue"),"\u4e2d\u662f\u4e00\u4e2a",(0,a.kt)("strong",{parentName:"p"},"Ref"),")")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const {\n  loading: boolean,\n  data?: TData,\n  error?: Error,\n  params: TParams || [],\n  run: (...params: TParams) => void,\n  runAsync: (...params: TParams) => Promise<TData>,\n  refresh: () => void,\n  refreshAsync: () => Promise<TData>,\n  mutate: (data?: TData | ((oldData?: TData) => (TData | undefined))) => void,\n  cancel: () => void,\n} = useRequest<TData, TParams>(\n  service: (...args: TParams) => Promise<TData>,\n  {\n    manual?: boolean,\n    defaultParams?: TParams,\n    onBefore?: (params: TParams) => void,\n    onSuccess?: (data: TData, params: TParams) => void,\n    onError?: (e: Error, params: TParams) => void,\n    onFinally?: (params: TParams, data?: TData, e?: Error) => void,\n  }\n);\n")),(0,a.kt)("h3",{id:"result"},"Result"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,a.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,a.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"data"),(0,a.kt)("td",{parentName:"tr",align:null},"service \u8fd4\u56de\u7684\u6570\u636e"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"TData")," ","|"," ",(0,a.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"error"),(0,a.kt)("td",{parentName:"tr",align:null},"service \u629b\u51fa\u7684\u5f02\u5e38"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Error")," ","|"," ",(0,a.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"loading"),(0,a.kt)("td",{parentName:"tr",align:null},"service \u662f\u5426\u6b63\u5728\u6267\u884c"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"params"),(0,a.kt)("td",{parentName:"tr",align:null},"\u5f53\u6b21\u6267\u884c\u7684 service \u7684\u53c2\u6570\u6570\u7ec4\u3002\u6bd4\u5982\u4f60\u89e6\u53d1\u4e86 ",(0,a.kt)("inlineCode",{parentName:"td"},"run(1, 2, 3)"),"\uff0c\u5219 params \u7b49\u4e8e ",(0,a.kt)("inlineCode",{parentName:"td"},"[1, 2, 3]")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"TParams")," ","|"," ",(0,a.kt)("inlineCode",{parentName:"td"},"[]"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"run"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null," \u624b\u52a8\u89e6\u53d1 service \u6267\u884c\uff0c\u53c2\u6570\u4f1a\u4f20\u9012\u7ed9 service"),(0,a.kt)("li",null,"\u5f02\u5e38\u81ea\u52a8\u5904\u7406\uff0c\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"td"},"onError")," \u53cd\u9988"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(...params: TParams) => void"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"runAsync"),(0,a.kt)("td",{parentName:"tr",align:null},"\u4e0e ",(0,a.kt)("inlineCode",{parentName:"td"},"run")," \u7528\u6cd5\u4e00\u81f4\uff0c\u4f46\u8fd4\u56de\u7684\u662f Promise\uff0c\u9700\u8981\u81ea\u884c\u5904\u7406\u5f02\u5e38\u3002"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(...params: TParams) => Promise<TData>"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"refresh"),(0,a.kt)("td",{parentName:"tr",align:null},"\u4f7f\u7528\u4e0a\u4e00\u6b21\u7684 params\uff0c\u91cd\u65b0\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"td"},"run")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"() => void"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"refreshAsync"),(0,a.kt)("td",{parentName:"tr",align:null},"\u4f7f\u7528\u4e0a\u4e00\u6b21\u7684 params\uff0c\u91cd\u65b0\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"td"},"runAsync")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"() => Promise<TData>"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"mutate"),(0,a.kt)("td",{parentName:"tr",align:null},"\u76f4\u63a5\u4fee\u6539 ",(0,a.kt)("inlineCode",{parentName:"td"},"data")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(data?: TData / ((oldData?: TData) => (TData / undefined))) => void"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"cancel"),(0,a.kt)("td",{parentName:"tr",align:null},"\u53d6\u6d88\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u7684\u8bf7\u6c42"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"() => void"))))),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,a.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,a.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,a.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"manual"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null," \u9ed8\u8ba4 ",(0,a.kt)("inlineCode",{parentName:"td"},"false"),"\u3002 \u5373\u5728\u521d\u59cb\u5316\u65f6\u81ea\u52a8\u6267\u884c service\u3002"),(0,a.kt)("li",null,"\u5982\u679c\u8bbe\u7f6e\u4e3a ",(0,a.kt)("inlineCode",{parentName:"td"},"true"),"\uff0c\u5219\u9700\u8981\u624b\u52a8\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"td"},"run")," \u6216 ",(0,a.kt)("inlineCode",{parentName:"td"},"runAsync")," \u89e6\u53d1\u6267\u884c\u3002 "))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"boolean")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"false"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"defaultParams"),(0,a.kt)("td",{parentName:"tr",align:null},"\u9996\u6b21\u9ed8\u8ba4\u6267\u884c\u65f6\uff0c\u4f20\u9012\u7ed9 service \u7684\u53c2\u6570"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"TParams")),(0,a.kt)("td",{parentName:"tr",align:null},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onBefore"),(0,a.kt)("td",{parentName:"tr",align:null},"service \u6267\u884c\u524d\u89e6\u53d1"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(params: TParams) => void")),(0,a.kt)("td",{parentName:"tr",align:null},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onSuccess"),(0,a.kt)("td",{parentName:"tr",align:null},"service resolve \u65f6\u89e6\u53d1"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(data: TData, params: TParams) => void")),(0,a.kt)("td",{parentName:"tr",align:null},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onError"),(0,a.kt)("td",{parentName:"tr",align:null},"service reject \u65f6\u89e6\u53d1"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(e: Error, params: TParams) => void")),(0,a.kt)("td",{parentName:"tr",align:null},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onFinally"),(0,a.kt)("td",{parentName:"tr",align:null},"service \u6267\u884c\u5b8c\u6210\u65f6\u89e6\u53d1"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(params: TParams, data?: TData, e?: Error) => void")),(0,a.kt)("td",{parentName:"tr",align:null},"-")))),(0,a.kt)("p",null,"\u4ee5\u4e0a\u6211\u4eec\u4ecb\u7ecd\u4e86 useRequest \u6700\u57fa\u7840\u7684\u529f\u80fd\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e9b\u66f4\u9ad8\u7ea7\u7684\u80fd\u529b\u3002"))}f.isMDXComponent=!0}}]);