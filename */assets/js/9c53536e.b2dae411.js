"use strict";(self.webpackChunk_taro_hooks_website=self.webpackChunk_taro_hooks_website||[]).push([[564],{2473:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>g,frontMatter:()=>c,metadata:()=>m,toc:()=>d});n(79);var a=n(8570),o=n(6417),r=n(9497);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const c={title:"\u7f13\u5b58 & SWR",sidebar_position:10},u=void 0,m={unversionedId:"useRequest/cache",id:"useRequest/cache",title:"\u7f13\u5b58 & SWR",description:"\u5982\u679c\u8bbe\u7f6e\u4e86 options.cacheKey\uff0cuseRequest \u4f1a\u5c06\u5f53\u524d\u8bf7\u6c42\u6210\u529f\u7684\u6570\u636e\u7f13\u5b58\u8d77\u6765\u3002\u4e0b\u6b21\u7ec4\u4ef6\u521d\u59cb\u5316\u65f6\uff0c\u5982\u679c\u6709\u7f13\u5b58\u6570\u636e\uff0c\u6211\u4eec\u4f1a\u4f18\u5148\u8fd4\u56de\u7f13\u5b58\u6570\u636e\uff0c\u7136\u540e\u5728\u80cc\u540e\u53d1\u9001\u65b0\u8bf7\u6c42\uff0c\u4e5f\u5c31\u662f SWR \u7684\u80fd\u529b\u3002",source:"@site/../packages/hooks/src/useRequest/cache.mdx",sourceDirName:"useRequest",slug:"/useRequest/cache",permalink:"/taro-hooks/hooks/useRequest/cache",draft:!1,editUrl:"https://github.com/innocces/taro-hooks/edit/next/src/../packages/hooks/src/useRequest/cache.mdx",tags:[],version:"current",lastUpdatedBy:"innocces",lastUpdatedAt:1705200916,formattedLastUpdatedAt:"2024\u5e741\u670814\u65e5",sidebarPosition:10,frontMatter:{title:"\u7f13\u5b58 & SWR",sidebar_position:10},sidebar:"hooks",previous:{title:"\u8282\u6d41",permalink:"/taro-hooks/hooks/useRequest/throttle"},next:{title:"\u9519\u8bef\u91cd\u8bd5",permalink:"/taro-hooks/hooks/useRequest/retry"}},p={},d=[{value:"SWR",id:"swr",level:3},{value:"\u6570\u636e\u4fdd\u6301\u65b0\u9c9c",id:"\u6570\u636e\u4fdd\u6301\u65b0\u9c9c",level:3},{value:"\u6570\u636e\u5171\u4eab",id:"\u6570\u636e\u5171\u4eab",level:3},{value:"\u53c2\u6570\u7f13\u5b58",id:"\u53c2\u6570\u7f13\u5b58",level:3},{value:"\u5220\u9664\u7f13\u5b58",id:"\u5220\u9664\u7f13\u5b58",level:3},{value:"\u81ea\u5b9a\u4e49\u7f13\u5b58",id:"\u81ea\u5b9a\u4e49\u7f13\u5b58",level:3},{value:"API",id:"api",level:2},{value:"Options",id:"options",level:3},{value:"clearCache",id:"clearcache",level:3},{value:"\u5907\u6ce8",id:"\u5907\u6ce8",level:2}],k={toc:d},h="wrapper";function g(e){var{components:t}=e,n=l(e,["components"]);return(0,a.kt)(h,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){s(e,t,n[t])}))}return e}({},k,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u5982\u679c\u8bbe\u7f6e\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"options.cacheKey"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"useRequest")," \u4f1a\u5c06\u5f53\u524d\u8bf7\u6c42\u6210\u529f\u7684\u6570\u636e\u7f13\u5b58\u8d77\u6765\u3002\u4e0b\u6b21\u7ec4\u4ef6\u521d\u59cb\u5316\u65f6\uff0c\u5982\u679c\u6709\u7f13\u5b58\u6570\u636e\uff0c\u6211\u4eec\u4f1a\u4f18\u5148\u8fd4\u56de\u7f13\u5b58\u6570\u636e\uff0c\u7136\u540e\u5728\u80cc\u540e\u53d1\u9001\u65b0\u8bf7\u6c42\uff0c\u4e5f\u5c31\u662f SWR \u7684\u80fd\u529b\u3002"),(0,a.kt)("p",null,"\u4f60\u53ef\u4ee5\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"options.staleTime")," \u8bbe\u7f6e\u6570\u636e\u4fdd\u6301\u65b0\u9c9c\u65f6\u95f4\uff0c\u5728\u8be5\u65f6\u95f4\u5185\uff0c\u6211\u4eec\u8ba4\u4e3a\u6570\u636e\u662f\u65b0\u9c9c\u7684\uff0c\u4e0d\u4f1a\u91cd\u65b0\u53d1\u8d77\u8bf7\u6c42\u3002"),(0,a.kt)("p",null,"\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"options.cacheTime")," \u8bbe\u7f6e\u6570\u636e\u7f13\u5b58\u65f6\u95f4\uff0c\u8d85\u8fc7\u8be5\u65f6\u95f4\uff0c\u6211\u4eec\u4f1a\u6e05\u7a7a\u8be5\u6761\u7f13\u5b58\u6570\u636e\u3002"),(0,a.kt)("p",null,"\u63a5\u4e0b\u6765\u901a\u8fc7\u51e0\u4e2a\u4f8b\u5b50\u6765\u4f53\u9a8c\u7f13\u5b58\u8fd9\u4e9b\u529f\u80fd\u3002"),(0,a.kt)("h3",{id:"swr"},"SWR"),(0,a.kt)("p",null,"\u4e0b\u9762\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"cacheKey"),"\uff0c\u5728\u7ec4\u4ef6\u7b2c\u4e8c\u6b21\u52a0\u8f7d\u65f6\uff0c\u4f1a\u4f18\u5148\u8fd4\u56de\u7f13\u5b58\u7684\u5185\u5bb9\uff0c\u7136\u540e\u5728\u80cc\u540e\u91cd\u65b0\u53d1\u8d77\u8bf7\u6c42\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u6309\u94ae\u6765\u4f53\u9a8c\u6548\u679c\u3002"),(0,a.kt)(r.ZP,{VueTab:(0,a.kt)(o.Z,{language:"html",title:"network/useRequest/cache/cacheKey",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/cache/cacheKey.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/cache/cacheKey",mdxType:"CodeDisplay"},"<template>\n  <block>\n    <demo-content title=\"\u7f13\u5b58 & SWR\">\n      <nut-row justify=\"center\">\n        <nut-button\n          size=\"small\"\n          type=\"primary\"\n          shape=\"square\"\n          block\n          @click=\"toggle()\"\n        >\n          show / hidden\n        </nut-button>\n      </nut-row>\n      <block v-show=\"state\">\n        <view v-if=\"!request.data && request.loading\">Loading...</view>\n        <template v-else>\n          <view>\n            Background loading:\n            {{ request.loading ? 'true' : 'false' }}\n          </view>\n          <view>Latest request time: {{ request.data?.time }}</view>\n          <view>{{ request.data?.data }}</view>\n        </template>\n      </block>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useRequest } from 'taro-hooks';\nimport { escapeState } from '@taro-hooks/shared';\nimport { useToggle } from '@taro-hooks/ahooks';\n\nimport Mock from 'mockjs';\n\nasync function getArticle() {\n  console.log('cacheKey-key');\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@paragraph()'),\n        time: new Date().getTime(),\n      });\n    }, 1000);\n  });\n}\n\nexport default {\n  setup() {\n    const [state, action] = useToggle(false);\n    const request = useRequest(getArticle, {\n      cacheKey: 'cacheKey-demo',\n    });\n\n    const toggle = () => {\n      // \u4e3a\u4e86\u660e\u663e\u4e00\u70b9, vue\u653e\u5728\u65b9\u6cd5\u91cc\u53bb\u6389\u7528\n      if (!escapeState(state)) {\n        escapeState(request).run();\n      }\n\n      escapeState(action).toggle();\n    };\n\n    return { state, toggle, request };\n  },\n};\n<\/script>\n"),ReactTab:(0,a.kt)(o.Z,{language:"tsx",title:"network/useRequest/cache/cacheKey",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/cache/cacheKey.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/cache/cacheKey",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Field } from '@taroify/core';\n\nimport { useRequest } from 'taro-hooks';\nimport { useBoolean } from '@taro-hooks/ahooks';\nimport Mock from 'mockjs';\n\nasync function getArticle(): Promise<{ data: string; time: number }> {\n  console.log('cacheKey');\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@paragraph(4)'),\n        time: new Date().getTime(),\n      });\n    }, 1000);\n  });\n}\n\nconst Article = () => {\n  const { data, loading } = useRequest(getArticle, {\n    cacheKey: 'cacheKey-demo',\n  });\n  if (!data && loading) {\n    return <Field>Loading</Field>;\n  }\n  return (\n    <>\n      <Field>Background loading: {loading ? 'true' : 'false'}</Field>\n      <Field>Latest request time: {data?.time}</Field>\n      <Field>{data?.data}</Field>\n    </>\n  );\n};\n\nexport default () => {\n  const [state, { toggle }] = useBoolean();\n\n  return (\n    <DemoContent title=\"\u7f13\u5b58 & SWR\">\n      <Field align=\"center\">\n        <Button color=\"primary\" size=\"small\" block onClick={() => toggle()}>\n          show / hidden\n        </Button>\n      </Field>\n      {state && <Article />}\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h3",{id:"\u6570\u636e\u4fdd\u6301\u65b0\u9c9c"},"\u6570\u636e\u4fdd\u6301\u65b0\u9c9c"),(0,a.kt)("p",null,"\u901a\u8fc7\u8bbe\u7f6e ",(0,a.kt)("inlineCode",{parentName:"p"},"staleTime"),"\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u6570\u636e\u65b0\u9c9c\u65f6\u95f4\uff0c\u5728\u8fd9\u4e2a\u65f6\u95f4\u5185\uff0c\u4e0d\u4f1a\u91cd\u65b0\u53d1\u8d77\u8bf7\u6c42\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u8bbe\u7f6e\u4e86 5s \u7684\u65b0\u9c9c\u65f6\u95f4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u6309\u94ae\u6765\u4f53\u9a8c\u6548\u679c"),(0,a.kt)(r.ZP,{VueTab:(0,a.kt)(o.Z,{language:"html",title:"network/useRequest/cache/staleTime",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/cache/staleTime.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/cache/staleTime",mdxType:"CodeDisplay"},"<template>\n  <block>\n    <demo-content title=\"\u7f13\u5b58 & SWR - \u6570\u636e\u4fdd\u6301\u65b0\u9c9c\">\n      <nut-row justify=\"center\">\n        <nut-button\n          size=\"small\"\n          type=\"primary\"\n          shape=\"square\"\n          block\n          @click=\"toggle()\"\n        >\n          show / hidden\n        </nut-button>\n      </nut-row>\n      <block v-show=\"state\">\n        <view v-if=\"!request.data && request.loading\">Loading...</view>\n        <template v-else>\n          <view>\n            Background loading:\n            {{ request.loading ? 'true' : 'false' }}\n          </view>\n          <view>Latest request time: {{ request.data?.time }}</view>\n          <view>{{ request.data?.data }}</view>\n        </template>\n      </block>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useRequest } from 'taro-hooks';\nimport { escapeState } from '@taro-hooks/shared';\nimport { useToggle } from '@taro-hooks/ahooks';\n\nimport Mock from 'mockjs';\n\nasync function getArticle() {\n  console.log('cacheKey-staleTime');\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@paragraph()'),\n        time: new Date().getTime(),\n      });\n    }, 1000);\n  });\n}\n\nexport default {\n  setup() {\n    const [state, action] = useToggle(false);\n    const request = useRequest(getArticle, {\n      cacheKey: 'staleTime-demo',\n      staleTime: 5000,\n    });\n\n    const toggle = () => {\n      // \u4e3a\u4e86\u660e\u663e\u4e00\u70b9, vue\u653e\u5728\u65b9\u6cd5\u91cc\u53bb\u6389\u7528\n      if (!escapeState(state)) {\n        escapeState(request).run();\n      }\n\n      escapeState(action).toggle();\n    };\n\n    return { state, toggle, request };\n  },\n};\n<\/script>\n"),ReactTab:(0,a.kt)(o.Z,{language:"tsx",title:"network/useRequest/cache/staleTime",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/cache/staleTime.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/cache/staleTime",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Field } from '@taroify/core';\n\nimport { useRequest } from 'taro-hooks';\nimport { useBoolean } from '@taro-hooks/ahooks';\nimport Mock from 'mockjs';\n\nasync function getArticle(): Promise<{ data: string; time: number }> {\n  console.log('cacheKey-staleTime');\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@paragraph()'),\n        time: new Date().getTime(),\n      });\n    }, 1000);\n  });\n}\n\nconst Article = () => {\n  const { data, loading } = useRequest(getArticle, {\n    cacheKey: 'staleTime-demo',\n    staleTime: 5000,\n  });\n  if (!data && loading) {\n    return <Field>Loading</Field>;\n  }\n  return (\n    <>\n      <Field>Background loading: {loading ? 'true' : 'false'}</Field>\n      <Field>Latest request time: {data?.time}</Field>\n      <Field>{data?.data}</Field>\n    </>\n  );\n};\n\nexport default () => {\n  const [state, { toggle }] = useBoolean();\n\n  return (\n    <DemoContent title=\"\u7f13\u5b58 & SWR - \u6570\u636e\u4fdd\u6301\u65b0\u9c9c\">\n      <Field align=\"center\">\n        <Button color=\"primary\" size=\"small\" block onClick={() => toggle()}>\n          show / hidden\n        </Button>\n      </Field>\n      {state && <Article />}\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h3",{id:"\u6570\u636e\u5171\u4eab"},"\u6570\u636e\u5171\u4eab"),(0,a.kt)("p",null,"\u540c\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"cacheKey")," \u7684\u5185\u5bb9\uff0c\u5728\u5168\u5c40\u662f\u5171\u4eab\u7684\uff0c\u8fd9\u4f1a\u5e26\u6765\u4ee5\u4e0b\u51e0\u4e2a\u7279\u6027"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8bf7\u6c42 ",(0,a.kt)("inlineCode",{parentName:"li"},"Promise")," \u5171\u4eab\uff0c\u76f8\u540c\u7684 ",(0,a.kt)("inlineCode",{parentName:"li"},"cacheKey")," \u540c\u65f6\u53ea\u4f1a\u6709\u4e00\u4e2a\u5728\u53d1\u8d77\u8bf7\u6c42\uff0c\u540e\u53d1\u8d77\u7684\u4f1a\u5171\u7528\u540c\u4e00\u4e2a\u8bf7\u6c42 ",(0,a.kt)("inlineCode",{parentName:"li"},"Promise")),(0,a.kt)("li",{parentName:"ul"},"\u6570\u636e\u540c\u6b65\uff0c\u4efb\u4f55\u65f6\u5019\uff0c\u5f53\u6211\u4eec\u6539\u53d8\u5176\u4e2d\u67d0\u4e2a ",(0,a.kt)("inlineCode",{parentName:"li"},"cacheKey")," \u7684\u5185\u5bb9\u65f6\uff0c\u5176\u5b83\u76f8\u540c ",(0,a.kt)("inlineCode",{parentName:"li"},"cacheKey")," \u7684\u5185\u5bb9\u5747\u4f1a\u540c\u6b65")),(0,a.kt)("p",null,"\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u521d\u59cb\u5316\u65f6\uff0c\u4e24\u4e2a\u7ec4\u4ef6\u53ea\u4f1a\u53d1\u8d77\u4e00\u4e2a\u8bf7\u6c42\u3002\u5e76\u4e14\u4e24\u7bc7\u6587\u7ae0\u7684\u5185\u5bb9\u6c38\u8fdc\u662f\u540c\u6b65\u7684\u3002"),(0,a.kt)(r.ZP,{VueTab:(0,a.kt)(o.Z,{language:"html",title:"network/useRequest/cache/share",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/cache/share.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/cache/share",mdxType:"CodeDisplay"},'<template>\n  <block>\n    <demo-content title="\u7f13\u5b58 & SWR - \u6570\u636e\u5171\u4eab">\n      <template v-for="(request, index) in [request1, request2]" :key="index">\n        <view>Article {{ index + 1 }}</view>\n        <view v-if="!request.data && request.loading">Loading...</view>\n        <template v-else>\n          <view>\n            Background loading:\n            {{ request.loading ? \'true\' : \'false\' }}\n          </view>\n          <nut-row justify="center">\n            <nut-button\n              size="small"\n              type="primary"\n              shape="square"\n              block\n              @click="request.refresh()"\n            >\n              \u66f4\u65b0\n            </nut-button>\n          </nut-row>\n          <view>Latest request time: {{ request.data?.time }}</view>\n          <view>{{ request.data?.data }}</view>\n        </template>\n      </template>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useRequest } from \'taro-hooks\';\n\nimport Mock from \'mockjs\';\n\nasync function getArticle() {\n  console.log(\'cacheKey-share\');\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock(\'@paragraph()\'),\n        time: new Date().getTime(),\n      });\n    }, 3000);\n  });\n}\n\nexport default {\n  setup() {\n    const request1 = useRequest(getArticle, {\n      cacheKey: \'cacheKey-share\',\n    });\n    const request2 = useRequest(getArticle, {\n      cacheKey: \'cacheKey-share\',\n    });\n\n    return { request1, request2 };\n  },\n};\n<\/script>\n'),ReactTab:(0,a.kt)(o.Z,{language:"tsx",title:"network/useRequest/cache/share",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/cache/share.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/cache/share",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Field } from '@taroify/core';\n\nimport { useRequest } from 'taro-hooks';\nimport Mock from 'mockjs';\n\nasync function getArticle(): Promise<{ data: string; time: number }> {\n  console.log('cacheKey-share');\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@paragraph()'),\n        time: new Date().getTime(),\n      });\n    }, 3000);\n  });\n}\n\nconst Article = () => {\n  const { data, loading, refresh } = useRequest(getArticle, {\n    cacheKey: 'cacheKey-share',\n  });\n  if (!data && loading) {\n    return <Field>Loading</Field>;\n  }\n  return (\n    <>\n      <Field>Background loading: {loading ? 'true' : 'false'}</Field>\n      <Field align=\"center\">\n        <Button\n          loading={loading}\n          color=\"primary\"\n          size=\"small\"\n          block\n          onClick={() => refresh()}\n        >\n          \u66f4\u65b0\n        </Button>\n      </Field>\n\n      <Field>Latest request time: {data?.time}</Field>\n      <Field>{data?.data}</Field>\n    </>\n  );\n};\n\nexport default () => {\n  return (\n    <DemoContent title=\"\u7f13\u5b58 & SWR - \u6570\u636e\u5171\u4eab\">\n      <Field>Article 1</Field>\n      <Article />\n      <Field>Article 2</Field>\n      <Article />\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h3",{id:"\u53c2\u6570\u7f13\u5b58"},"\u53c2\u6570\u7f13\u5b58"),(0,a.kt)("p",null,"\u7f13\u5b58\u7684\u6570\u636e\u5305\u62ec ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"params"),"\uff0c\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"params")," \u7f13\u5b58\u673a\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5fc6\u4e0a\u4e00\u6b21\u8bf7\u6c42\u7684\u6761\u4ef6\uff0c\u5e76\u5728\u4e0b\u6b21\u521d\u59cb\u5316\u3002"),(0,a.kt)("p",null,"\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u7f13\u5b58\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"params")," \u4e2d\u521d\u59cb\u5316 ",(0,a.kt)("inlineCode",{parentName:"p"},"keyword")),(0,a.kt)(r.ZP,{VueTab:(0,a.kt)(o.Z,{language:"html",title:"network/useRequest/cache/params",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/cache/params.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/cache/params",mdxType:"CodeDisplay"},'<template>\n  <block>\n    <demo-content title="\u7f13\u5b58 & SWR - \u53c2\u6570\u7f13\u5b58">\n      <nut-row justify="center">\n        <nut-button\n          size="small"\n          type="primary"\n          shape="square"\n          block\n          @click="toggle()"\n        >\n          show / hidden\n        </nut-button>\n      </nut-row>\n      <block v-show="state">\n        <view v-if="!request.data && request.loading">Loading...</view>\n        <template v-else>\n          <nut-input\n            placeholder="keyword"\n            @update:model-value="setKeyword($event)"\n          >\n            <template #button>\n              <nut-button\n                :loading="request.loading"\n                size="small"\n                type="primary"\n                shape="square"\n                @click="request.run(keyword)"\n                >Get</nut-button\n              >\n            </template>\n          </nut-input>\n          <view>\n            Background loading:\n            {{ request.loading ? \'true\' : \'false\' }}\n          </view>\n          <view>Latest request time: {{ request.data?.time }}</view>\n          <view>{{ request.data?.data }}</view>\n        </template>\n      </block>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useRequest } from \'taro-hooks\';\nimport { useState } from \'@taro-hooks/core\';\nimport { escapeState } from \'@taro-hooks/shared\';\nimport { useToggle } from \'@taro-hooks/ahooks\';\n\nimport Mock from \'mockjs\';\n\nasync function getArticle(keyword) {\n  console.log(\'cacheKey-demo\', keyword);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock(\'@paragraph()\'),\n        time: new Date().getTime(),\n      });\n    }, 1000);\n  });\n}\n\nexport default {\n  setup() {\n    const [state, action] = useToggle(false);\n    const request = useRequest(getArticle, {\n      cacheKey: \'cacheKey-demo\',\n    });\n    const [keyword, setKeyword] = useState(\n      escapeState(request).params[0] || \'\',\n    );\n\n    const toggle = () => {\n      // \u4e3a\u4e86\u660e\u663e\u4e00\u70b9, vue\u653e\u5728\u65b9\u6cd5\u91cc\u53bb\u6389\u7528\n      if (!escapeState(state)) {\n        escapeState(request).run();\n      }\n\n      escapeState(action).toggle();\n    };\n\n    return { state, toggle, request, keyword, setKeyword };\n  },\n};\n<\/script>\n'),ReactTab:(0,a.kt)(o.Z,{language:"tsx",title:"network/useRequest/cache/params",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/cache/params.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/cache/params",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Field, Input } from '@taroify/core';\n\nimport { useRequest } from 'taro-hooks';\nimport { useState } from '@taro-hooks/core';\nimport { useBoolean } from '@taro-hooks/ahooks';\nimport Mock from 'mockjs';\n\nasync function getArticle(\n  keyword: string,\n): Promise<{ data: string; time: number }> {\n  console.log('cacheKey', keyword);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@paragraph()'),\n        time: new Date().getTime(),\n      });\n    }, 1000);\n  });\n}\n\nconst Article = () => {\n  const { data, params, loading, run } = useRequest(getArticle, {\n    cacheKey: 'cacheKey-demo',\n  });\n\n  const [keyword, setKeyword] = useState(params[0] || '');\n\n  if (!data && loading) {\n    return <Field>Loading</Field>;\n  }\n  return (\n    <>\n      <Field align=\"center\">\n        <Input value={keyword} onChange={(e) => setKeyword(e.detail.value)} />\n        <Button color=\"primary\" size=\"small\" onClick={() => run(keyword)}>\n          Get\n        </Button>\n      </Field>\n      <Field>Background loading: {loading ? 'true' : 'false'}</Field>\n      <Field>Latest request time: {data?.time}</Field>\n      <Field>Keyword: {keyword}</Field>\n      <Field>{data?.data}</Field>\n    </>\n  );\n};\n\nexport default () => {\n  const [state, { toggle }] = useBoolean();\n\n  return (\n    <DemoContent title=\"\u7f13\u5b58 & SWR - \u53c2\u6570\u7f13\u5b58\">\n      <Field align=\"center\">\n        <Button color=\"primary\" size=\"small\" block onClick={() => toggle()}>\n          show / hidden\n        </Button>\n      </Field>\n      {state && <Article />}\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h3",{id:"\u5220\u9664\u7f13\u5b58"},"\u5220\u9664\u7f13\u5b58"),(0,a.kt)("p",null,"taro-hooks \u63d0\u4f9b\u4e86\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"clearCache")," \u65b9\u6cd5\uff0c\u53ef\u4ee5\u6e05\u9664\u6307\u5b9a ",(0,a.kt)("inlineCode",{parentName:"p"},"cacheKey")," \u7684\u7f13\u5b58\u6570\u636e\u3002"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"vue"),"\u4e2d\u6e05\u9664\u7f13\u5b58\u7684\u4f8b\u5b50\u4e0d\u592a\u597d\u5b9e\u73b0. \u7ec4\u4ef6\u5378\u8f7d\u539f\u5219\u7684\u95ee\u9898.")),(0,a.kt)(r.ZP,{VueTab:(0,a.kt)(o.Z,{language:"html",title:"network/useRequest/cache/clearCache",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/cache/clearCache.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/cache/clearCache",mdxType:"CodeDisplay"},'<template>\n  <block>\n    <demo-content title="\u7f13\u5b58 & SWR - \u5220\u9664\u7f13\u5b58">\n      <nut-row justify="center">\n        <nut-button\n          size="small"\n          type="primary"\n          shape="square"\n          block\n          @click="toggle()"\n        >\n          show / hidden\n        </nut-button>\n      </nut-row>\n      <nut-row\n        justify="center"\n        v-for="cacheKey in cacheKeyList"\n        :key="cacheKey"\n      >\n        <nut-button\n          size="small"\n          type="primary"\n          shape="square"\n          block\n          @click="clear(cacheKey)"\n        >\n          clear {{ cacheKey }}\n        </nut-button>\n      </nut-row>\n      <nut-row justify="center">\n        <nut-button\n          size="small"\n          type="primary"\n          shape="square"\n          block\n          @click="clear([\'Article2\', \'Article3\'])"\n        >\n          clear Article2 and Article3\n        </nut-button>\n      </nut-row>\n      <nut-row justify="center">\n        <nut-button\n          size="small"\n          type="primary"\n          shape="square"\n          block\n          @click="clear()"\n        >\n          clear all\n        </nut-button>\n      </nut-row>\n      <template\n        v-for="(request, index) in [request1, request2, request3]"\n        :key="index"\n      >\n        <view>Article {{ index + 1 }}</view>\n        <block v-show="state">\n          <view v-if="!request.data && request.loading">Loading...</view>\n          <template v-else>\n            <view>\n              Background loading:\n              {{ request.loading ? \'true\' : \'false\' }}\n            </view>\n            <view>Latest request time: {{ request.data?.time }}</view>\n            <view>{{ request.data?.data }}</view>\n          </template>\n        </block>\n      </template>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useRequest, clearCache } from \'taro-hooks\';\nimport { showToast } from \'@tarojs/taro\';\nimport { useToggle } from \'@taro-hooks/ahooks\';\nimport { escapeState } from \'@taro-hooks/shared\';\n\nimport Mock from \'mockjs\';\n\nasync function getArticle() {\n  console.log(\'cacheKey-share\');\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock(\'@paragraph()\'),\n        time: new Date().getTime(),\n      });\n    }, 3000);\n  });\n}\n\nexport default {\n  setup() {\n    const [state, action] = useToggle(false);\n    const cacheKeyList = [\'Article1\', \'Article2\', \'Article3\'];\n    const request1 = useRequest(getArticle, {\n      cacheKey: cacheKeyList[0],\n    });\n    const request2 = useRequest(getArticle, {\n      cacheKey: cacheKeyList[1],\n    });\n    const request3 = useRequest(getArticle, {\n      cacheKey: cacheKeyList[2],\n    });\n\n    const clear = (cacheKey) => {\n      clearCache(cacheKey);\n      const tips = Array.isArray(cacheKey) ? cacheKey.join(\'\u3001\') : cacheKey;\n      showToast({\n        title: \'Clear ${tips ?? \'All\'} finished\',\n        icon: \'success\',\n        mask: true,\n      });\n    };\n\n    const toggle = () => {\n      // \u4e3a\u4e86\u660e\u663e\u4e00\u70b9, vue\u653e\u5728\u65b9\u6cd5\u91cc\u53bb\u6389\u7528\n      if (!escapeState(state)) {\n        escapeState(request1).run();\n        escapeState(request2).run();\n        escapeState(request3).run();\n      }\n\n      escapeState(action).toggle();\n    };\n\n    return { state, request1, request2, request3, cacheKeyList, clear, toggle };\n  },\n};\n<\/script>\n'),ReactTab:(0,a.kt)(o.Z,{language:"tsx",title:"network/useRequest/cache/clearCache",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/cache/clearCache.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/cache/clearCache",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Field } from '@taroify/core';\n\nimport { useRequest, clearCache } from 'taro-hooks';\nimport { showToast } from '@tarojs/taro';\nimport { useBoolean } from '@taro-hooks/ahooks';\nimport Mock from 'mockjs';\n\nasync function getArticle(): Promise<{ data: string; time: number }> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@paragraph(4)'),\n        time: new Date().getTime(),\n      });\n    }, 3000);\n  });\n}\n\nconst Article = ({ cacheKey }) => {\n  const { data, loading } = useRequest(getArticle, {\n    cacheKey,\n  });\n\n  console.log(data, Mock.mock('@paragraph()'));\n\n  if (!data && loading) {\n    return <Field>Loading</Field>;\n  }\n  return (\n    <>\n      <Field>Background loading: {loading ? 'true' : 'false'}</Field>\n      <Field>Latest request time: {data?.time}</Field>\n      <Field>{data?.data}</Field>\n    </>\n  );\n};\n\nconst clear = (cacheKey?: string | string[]) => {\n  clearCache(cacheKey);\n  const tips = Array.isArray(cacheKey) ? cacheKey.join('\u3001') : cacheKey;\n  showToast({\n    title: 'Clear ${tips ?? 'All'} finished',\n    icon: 'success',\n    mask: true,\n  });\n};\n\nexport default () => {\n  const [state, { toggle }] = useBoolean();\n\n  return (\n    <DemoContent title=\"\u7f13\u5b58 & SWR - \u5220\u9664\u7f13\u5b58\">\n      <Field align=\"center\">\n        <Button color=\"primary\" size=\"small\" block onClick={() => toggle()}>\n          show / hidden\n        </Button>\n      </Field>\n      <Field align=\"center\">\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          block\n          onClick={() => clear('Article1')}\n        >\n          clear Article1\n        </Button>\n      </Field>\n      <Field align=\"center\">\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          block\n          onClick={() => clear('Article2')}\n        >\n          clear Article2\n        </Button>\n      </Field>\n      <Field align=\"center\">\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          block\n          onClick={() => clear(['Article2', 'Article3'])}\n        >\n          clear Article2 and Article3\n        </Button>\n      </Field>\n      <Field align=\"center\">\n        <Button color=\"primary\" size=\"small\" block onClick={() => clear()}>\n          clear all\n        </Button>\n      </Field>\n      <Field>Article 1</Field>\n      {state && <Article cacheKey=\"Article1\" />}\n      <Field>Article 2</Field>\n      {state && <Article cacheKey=\"Article2\" />}\n      <Field>Article 3</Field>\n      {state && <Article cacheKey=\"Article3\" />}\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u7f13\u5b58"},"\u81ea\u5b9a\u4e49\u7f13\u5b58"),(0,a.kt)("p",null,"\u901a\u8fc7\u914d\u7f6e ",(0,a.kt)("inlineCode",{parentName:"p"},"setCache")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"getCache"),"\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6570\u636e\u7f13\u5b58\uff0c\u6bd4\u5982\u53ef\u4ee5\u5c06\u6570\u636e\u5b58\u50a8\u5230 ",(0,a.kt)("inlineCode",{parentName:"p"},"localStorage"),"\u3001",(0,a.kt)("inlineCode",{parentName:"p"},"IndexDB")," \u7b49\u3002"),(0,a.kt)("p",null,"\u8bf7\u6ce8\u610f\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"setCache")," \u548c ",(0,a.kt)("inlineCode",{parentName:"li"},"getCache")," \u9700\u8981\u914d\u5957\u4f7f\u7528\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u5728\u81ea\u5b9a\u4e49\u7f13\u5b58\u6a21\u5f0f\u4e0b\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"cacheTime")," \u548c ",(0,a.kt)("inlineCode",{parentName:"li"},"clearCache")," \u4e0d\u4f1a\u751f\u6548\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u81ea\u884c\u5b9e\u73b0\u3002")),(0,a.kt)(r.ZP,{VueTab:(0,a.kt)(o.Z,{language:"html",title:"network/useRequest/cache/setCache",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin-vue/src/pages/network/useRequest/cache/setCache.vue",url:"https://innocces.github.io/taro-hooks/vue/pages/network/useRequest/cache/setCache",mdxType:"CodeDisplay"},"<template>\n  <block>\n    <demo-content title=\"\u7f13\u5b58 & SWR - \u81ea\u5b9a\u4e49\u7f13\u5b58\">\n      <nut-row justify=\"center\">\n        <nut-button\n          size=\"small\"\n          type=\"primary\"\n          shape=\"square\"\n          block\n          @click=\"toggle()\"\n        >\n          show / hidden\n        </nut-button>\n      </nut-row>\n      <block v-show=\"state\">\n        <view v-if=\"!request.data && request.loading\">Loading...</view>\n        <template v-else>\n          <view>\n            Background loading:\n            {{ request.loading ? 'true' : 'false' }}\n          </view>\n          <view>Latest request time: {{ request.data?.time }}</view>\n          <view>{{ request.data?.data }}</view>\n        </template>\n      </block>\n    </demo-content>\n  </block>\n</template>\n\n<script>\nimport { useRequest } from 'taro-hooks';\nimport { escapeState } from '@taro-hooks/shared';\nimport { useToggle } from '@taro-hooks/ahooks';\nimport { setStorageSync, getStorageSync } from '@tarojs/taro';\n\nimport Mock from 'mockjs';\n\nasync function getArticle() {\n  console.log('cacheKey');\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@paragraph()'),\n        time: new Date().getTime(),\n      });\n    }, 1000);\n  });\n}\n\nconst cacheKey = 'setCache-demo';\n\nexport default {\n  setup() {\n    const [state, action] = useToggle(false);\n    const request = useRequest(getArticle, {\n      cacheKey,\n      setCache: (responseData) =>\n        setStorageSync(cacheKey, JSON.stringify(responseData)),\n      getCache: () => JSON.parse(getStorageSync(cacheKey) || '{}'),\n    });\n\n    const toggle = () => {\n      // \u4e3a\u4e86\u660e\u663e\u4e00\u70b9, vue\u653e\u5728\u65b9\u6cd5\u91cc\u53bb\u6389\u7528\n      if (!escapeState(state)) {\n        escapeState(request).run();\n      }\n\n      escapeState(action).toggle();\n    };\n\n    return { state, toggle, request };\n  },\n};\n<\/script>\n"),ReactTab:(0,a.kt)(o.Z,{language:"tsx",title:"network/useRequest/cache/setCache",openUrl:"https://github.com/innocces/taro-hooks/edit/next/examples/taro-hooks-plugin/src/pages/network/useRequest/cache/setCache.tsx",url:"https://innocces.github.io/taro-hooks/react/pages/network/useRequest/cache/setCache",mdxType:"CodeDisplay"},"import React from 'react';\nimport DemoContent from '@src/components/DemoContent';\nimport { Button, Field } from '@taroify/core';\n\nimport { setStorageSync, getStorageSync } from '@tarojs/taro';\nimport { useRequest } from 'taro-hooks';\nimport { useBoolean } from '@taro-hooks/ahooks';\nimport Mock from 'mockjs';\n\nasync function getArticle(): Promise<{ data: string; time: number }> {\n  console.log('cacheKey');\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: Mock.mock('@paragraph()'),\n        time: new Date().getTime(),\n      });\n    }, 1000);\n  });\n}\n\nconst cacheKey = 'setCache-demo';\n\nconst Article = () => {\n  const { data, loading } = useRequest(getArticle, {\n    cacheKey,\n    setCache: (responseData) =>\n      setStorageSync(cacheKey, JSON.stringify(responseData)),\n    getCache: () => JSON.parse(getStorageSync(cacheKey) || '{}'),\n  });\n  if (!data && loading) {\n    return <Field>Loading</Field>;\n  }\n  return (\n    <>\n      <Field>Background loading: {loading ? 'true' : 'false'}</Field>\n      <Field>Latest request time: {data?.time}</Field>\n      <Field>{data?.data}</Field>\n    </>\n  );\n};\n\nexport default () => {\n  const [state, { toggle }] = useBoolean();\n\n  return (\n    <DemoContent title=\"\u7f13\u5b58 & SWR - \u81ea\u5b9a\u4e49\u7f13\u5b58\">\n      <Field align=\"center\">\n        <Button color=\"primary\" size=\"small\" block onClick={() => toggle()}>\n          show / hidden\n        </Button>\n      </Field>\n      {state && <Article />}\n    </DemoContent>\n  );\n};\n"),mdxType:"CombineTabs"}),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface CachedData<TData, TParams> {\n  data: TData;\n  params: TParams;\n  time: number;\n}\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,a.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,a.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,a.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"cacheKey"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8bf7\u6c42\u552f\u4e00\u6807\u8bc6\u3002\u5982\u679c\u8bbe\u7f6e\u4e86 ",(0,a.kt)("inlineCode",{parentName:"td"},"cacheKey"),"\uff0c\u6211\u4eec\u4f1a\u542f\u7528\u7f13\u5b58\u673a\u5236\u3002\u540c\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"td"},"cacheKey")," \u7684\u6570\u636e\u5168\u5c40\u540c\u6b65\u3002"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"cacheTime"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null," \u8bbe\u7f6e\u7f13\u5b58\u6570\u636e\u56de\u6536\u65f6\u95f4\u3002\u9ed8\u8ba4\u7f13\u5b58\u6570\u636e 5 \u5206\u949f\u540e\u56de\u6536 "),(0,a.kt)("li",null," \u5982\u679c\u8bbe\u7f6e\u4e3a ",(0,a.kt)("inlineCode",{parentName:"td"},"-1"),", \u5219\u8868\u793a\u7f13\u5b58\u6570\u636e\u6c38\u4e0d\u8fc7\u671f"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"300000"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"staleTime"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null," \u7f13\u5b58\u6570\u636e\u4fdd\u6301\u65b0\u9c9c\u65f6\u95f4\u3002\u5728\u8be5\u65f6\u95f4\u95f4\u9694\u5185\uff0c\u8ba4\u4e3a\u6570\u636e\u662f\u65b0\u9c9c\u7684\uff0c\u4e0d\u4f1a\u91cd\u65b0\u53d1\u8bf7\u6c42 "),(0,a.kt)("li",null," \u5982\u679c\u8bbe\u7f6e\u4e3a ",(0,a.kt)("inlineCode",{parentName:"td"},"-1"),"\uff0c\u5219\u8868\u793a\u6570\u636e\u6c38\u8fdc\u65b0\u9c9c"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"number")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"setCache"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null," \u81ea\u5b9a\u4e49\u8bbe\u7f6e\u7f13\u5b58 "),(0,a.kt)("li",null," ",(0,a.kt)("inlineCode",{parentName:"td"},"setCache")," \u548c ",(0,a.kt)("inlineCode",{parentName:"td"},"getCache")," \u9700\u8981\u914d\u5957\u4f7f\u7528"),(0,a.kt)("li",null," \u5728\u81ea\u5b9a\u4e49\u7f13\u5b58\u6a21\u5f0f\u4e0b\uff0c",(0,a.kt)("inlineCode",{parentName:"td"},"cacheTime")," \u548c ",(0,a.kt)("inlineCode",{parentName:"td"},"clearCache")," \u4e0d\u4f1a\u751f\u6548\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u81ea\u884c\u5b9e\u73b0\u3002"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(data: CachedData) => void;")),(0,a.kt)("td",{parentName:"tr",align:null},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"getCache"),(0,a.kt)("td",{parentName:"tr",align:null},"\u81ea\u5b9a\u4e49\u8bfb\u53d6\u7f13\u5b58"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(params: TParams) => CachedData")),(0,a.kt)("td",{parentName:"tr",align:null},"-")))),(0,a.kt)("h3",{id:"clearcache"},"clearCache"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"showLineNumbers",showLineNumbers:!0},"import { clearCache } from 'taro-hooks';\n\nclearCache(cacheKey?: string | string[]);\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u652f\u6301\u6e05\u7a7a\u5355\u4e2a\u7f13\u5b58\uff0c\u6216\u4e00\u7ec4\u7f13\u5b58"),(0,a.kt)("li",{parentName:"ol"},"\u5982\u679c ",(0,a.kt)("inlineCode",{parentName:"li"},"cacheKey")," \u4e3a\u7a7a\uff0c\u5219\u6e05\u7a7a\u6240\u6709\u7f13\u5b58\u6570\u636e")),(0,a.kt)("h2",{id:"\u5907\u6ce8"},"\u5907\u6ce8"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u53ea\u6709\u6210\u529f\u7684\u8bf7\u6c42\u6570\u636e\u624d\u4f1a\u7f13\u5b58"),(0,a.kt)("li",{parentName:"ul"},"\u7f13\u5b58\u7684\u6570\u636e\u5305\u62ec ",(0,a.kt)("inlineCode",{parentName:"li"},"data")," \u548c ",(0,a.kt)("inlineCode",{parentName:"li"},"params"))))}g.isMDXComponent=!0}}]);